Road map for i18n-js-formatter

Version 0.1

	* Formatter
		✓ formatter plug-in
			✓ home-hand formatter
				✓ string
				✓ pretty number

Version 0.2

	✓ pretty duration (1000s → 16min 40s)
	✓ add context for translation
		✓ i18n.context('context', 'translation key', values)
		✓ i18n.c('context', 'translation key', values)
	✓ string: check that special characters are correctly upperCase
	✓ add script for minification (with and without s_formatter)
		✓ update documentation
	✓ escape values by default
		✓ propose different escape kind
			✓ HTML
			✓ regexp
			✓ URL
			✓ none

Version 0.3

	* add plural translations
		* i18n.n('singular', 'plural', quantity, other values)
		* i18n.n({0: '0 text', default: 'other quantities'}, quantity, other values)
		* i18n.n('default key sentence', quantity, other values)
	* number: support percent, 0.1 → 10%
	* number: support base conversion (binary, octal, hexa)
	* pretty duration: allow to exclude some units
	* pretty date
	* improve demonstration page
	* add info log (like for fallback language)

Version 0.4
	* create custom formatter
	* create custom variation
	* support fallback from error/warn/info (with custom function on error code)

To plan
	
	* clone i18n instance to allow scope modification (→ for version 1+)

	* Formatter
		* pretty conversion (custom data)
			✓ 1000 → 1k
			* 1000s → 16min (as generic value)
			* 1024byte → 1kbyte
		* custom format
			* allow to use other chars like %J to display a complex format